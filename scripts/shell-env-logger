#!/usr/bin/env bash

LOG_LEVEL="${LOG_LEVEL:-4}"
NO_COLOR="${NO_COLOR:-}"    # true = disable color, otherwise autodetected

function console_log () {
  local log_level="${1}"
  shift

  local param
  while [[ $# -gt 0 ]]; do
    param="$1"
    case $param in
      -category)
        if [[ -n "${2:-}" ]]; then
          local local_log_category="${2}"
          shift
        fi
        ;;
      -icon)
        if [[ -n "${2:-}" ]]; then
          local local_log_category_icon="${2}"
          shift
        fi
        ;;
      *)
        local_positional_param+=("${1}") # save positional parameters
        ;;
    esac
    shift
  done

    # restore positional parameters
  if ! [[ -z ${local_positional_param+x} ]]; then
    set -- "${local_positional_param[@]}"
    unset local_positional_param
  fi

  local_log_category="${local_log_category:-false}"
  local_log_category_icon="${local_log_category_icon:-🌐}"

  # shellcheck disable=SC2034
  local color_info="\\x1b[32m"
  # shellcheck disable=SC2034
  local color_error="\\x1b[31m"

  local colorvar="color_${log_level}"
  local color="${!colorvar:-${color_error}}"
  local color_reset="\\x1b[0m"

  if [[ "${NO_COLOR:-}" = "true" ]] || { [[ "${TERM:-}" != "xterm"* ]] && [[ "${TERM:-}" != "screen"* ]]; } || [[ ! -t 2 ]]; then
    if [[ "${NO_COLOR:-}" != "false" ]]; then
      # Don't use colors on pipes or non-recognized terminals
      color=""; color_reset=""
    fi
  fi

  # all remaining arguments are to be printed
  local log_level_block="${color}$(printf "[%9s]" "${log_level}")${color_reset}"
  local log_line=""

  while IFS=$'\n' read -r log_line; do
    if test "$local_log_category" = false; then
      echo -e "$(date -u +"%Y-%m-%d %H:%M:%S UTC") ${color}${log_level_block}${color_reset} ${log_line}" 1>&2
    else
      local log_category="$(printf "[${local_log_category_icon}%17s]" "${local_log_category:0:16}")"
      echo -e "$(date -u +"%Y-%m-%d %H:%M:%S UTC") ${log_level_block} ${log_category} ${log_line}" 1>&2
    fi
  done <<< "${@:-}"
}


function info()     { [[ "${LOG_LEVEL:-0}" -ge 4 ]] && console_log info "${@}"; true; }

function error()    { [[ "${LOG_LEVEL:-0}" -ge 2 ]] && console_log error "${@}"; true; }
